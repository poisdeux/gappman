-----------------------------------------------------------------------------
1. Introduction
-----------------------------------------------------------------------------

libparseconf is a library to load the gappman configuration files and 
populate the menu_elements structures.

-----------------------------------------------------------------------------
2. XML Configuration file format
-----------------------------------------------------------------------------

<gappman>
  <cachelocation>DIRECTORYPATH</cachelocation>
	<popupkey>KEY</popupkey>
  <actions max_elts="<AMOUNT>" width="<WIDTH>" height="<HEIGHT>" align="[[top|left|bottom|right|center],...]">
    <action>
      <name>ACTIONNAME</name>
      <printlabel>0|1</printlabel>
      <logo>LOGOIMAGEFILENAME</logo>
      <resolution>WIDTHxHEIGHT</resolution>
      <exec>EXECUTABLEFILENAME</exec>
      <arg>ARGUMENT</arg>
      <arg>ARGUMENT</arg>
    </action>
    ...
    ...
    ...
    <action>
      <name>ACTIONNAME</name>
      <printlabel>0|1</printlabel>
      <logo>LOGOIMAGEFILENAME</logo>
      <resolution>WIDTHxHEIGHT</resolution>
      <exec>EXECUTABLEFILENAME</exec>
      <arg>ARGUMENT</arg>
      <arg>ARGUMENT</arg>
    </action>
  </actions>
  <programs max_elts="<AMOUNT>" width="<WIDTH>" height="<HEIGHT>" align="[[top|left|bottom|right|center],...]">
    <program>
      <name>PROGRAMNAME</name>
      <printlabel>0|1</printlabel>
      <logo>LOGOIMAGEFILENAME</logo>
      <resolution>WIDTHxHEIGHT</resolution>
      <exec>EXECUTABLEFILENAME</exec>
      <arg>ARGUMENT</arg>
      ...
      ...
      ...
      <arg>ARGUMENT</arg>
      <autostart>[1|0]</autostart>
    </program>
    ...
    ...
    ...
    <program>
      <name>PROGRAMNAME</name>
      <printlabel>0|1</printlabel>
      <logo>LOGOIMAGEFILENAME</logo>
      <resolution>WIDTHxHEIGHT</resolution>
      <exec>EXECUTABLEFILENAME</exec>
      <arg>ARGUMENT</arg>
      ...
      ...
      ...
      <arg>ARGUMENT</arg>
      <autostart>[1|0]</autostart>
    </program>
  </programs>
	<panel width="<WIDTH>" height="<HEIGHT>" align="[[top|left|bottom|right|center],...]">
		<applet>
			<name>WIDGETNAME</name>
			<objectfile>SHAREDOBJECTFILENAME</objectfile>
			<conffile>SHAREDOBJECTCONFIGURATIONFILE</conffile>
		</applet>
	</panel>
</gappman>

If <cachelocation> is specified the system will first look for a cached version of the scaled images. If it cannot find an image it will scale the image pointed by <logo>, scale it, and save the scaled version in the directory specified by <cachelocation>.
NOTE: <name> should be unique among all programs, actions and panel elements if you want to use the <cachelocation> functionality

<popupkey> specifies the key GAppMan should respond to when pressed. GAppMan will pop the main window to the top of the window stack making it visible.

<printlabel> is optional and defaults to FALSE. If set to true the <name> of the program or action is used as textlabel for the button.
The attributes <width> and <height> can be specified in amount of pixels or in percentages. The latter should be followed by a % sign, for example: 50%. Percentages will be relative to the total screen width and height. Note that this does not count for the resolution element, which takes only width and height values in pixels.
The atribute max_elts will specify the maximum amount of program or action buttons may be displayed on the screen at the same time. This will create two additional buttons. One at the left and one at the right of the buttonbox. These buttons allow you to switch to the next or previous group of buttons.
<arg> and <resolution> are optional. If no <resolution> is given the default screen resolution will be used. 
The <autostart> attribute can have values 0 or 1. If set to 1 the program will be started when appmanager is started.

The panel section defines the shared objects that should be included in the panel. See the netman widget for an example of how to create a panel widget.
The <conffile> is optional and only needed if the module requires it.
