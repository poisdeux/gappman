-----------------------------------------------------------------------------
1. Making a new release version from trunk
-----------------------------------------------------------------------------

1. Edit the Changelog and raise the version number in configure.ac

2. Commit the changes on the trunk

svn commit -m "New release version VERSION"

3. Make a branch to test and debug the release

svn copy https://gappman.googlecode.com/svn/trunk/ \
	https://gappman.googlecode.com/svn/branches/RELEASEVERSION

4. After testing and debugging commit the changes, if any. 

svn commit -m "New release version VERSION"

5. Make a release version

svn copy https://gappman.googlecode.com/svn/branches/RELEASEVERSION \
  https://gappman.googlecode.com/svn/tags/release-RELEASEVERSION


-----------------------------------------------------------------------------
2. Making a maintenance release
-----------------------------------------------------------------------------

To release a bugfix version after the initial release you can make a maintenance release.
Maintenance releases should be tested on the branch and result in a RELEASEVERSION.x
	 where x is a subnumber starting at 1 and increased with every new maintenance release

1. Edit the Changelog and raise the version number in configure.ac

2. Commit the changes on the branch

svn commit -m "New maintenance version VERSION"

3. Make a maintenance release version
 
svn copy https://gappman.googlecode.com/svn/branches/RELEASEVERSION \
  https://gappman.googlecode.com/svn/tags/release-RELEASEVERSION.x



-----------------------------------------------------------------------------
3. Create a downloadable version of the release
-----------------------------------------------------------------------------

1. Go to the release version

cd tags/release-RELEASEVERSION.x

2. Create the makefiles

libtoolize --copy
aclocal
autoconf
automake --add-missing
/configure

1. Create the tarball as follows:

make dist

2. Copy the tarball to the website.

-----------------------------------------------------------------------------
4. Checking the code
-----------------------------------------------------------------------------

Splint might be a nice tool to check the code for security vulnerabilities and 
coding mistakes. It can be executed as follows:

splint -I `pkg-config gtk+-2.0 --cflags` `pkg-config libxml-2.0 --cflags` \
  -I./libs/connect/ -I./libs/generic/ -I./libs/layout/ -I./libs/parseconf/ \
  <SOURCEFILE>

It currently shows a lot of warnings.



