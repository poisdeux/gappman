-----------------------------------------------------------------------------
1. Introduction
-----------------------------------------------------------------------------

This is an application launcher utility that uses a XML configuration file to
specify the applications and logo images which should be included in the
menu. The menu is automatically created by scaling and placing the buttons to 
provide an evenly spaced layout.

This is very convenient when developing applications for homogeneous platforms
where the display size may vary considerably, e.g. mobile devices, HD 
television screens, computer screens.

Features:

* Automatic scaling and placing of buttons
* Supports two types of buttons; actions and programs. Here, action means starting a management application like configuring the X server, restarting the system, setting up network, etc.. Programs are applications which fullfill the actual purpose of the system. E.g. mediaplayer, remote desktop, webbrowsing, etc. etc..
* Change screen resolution when a program is started and change it back to original when program quits.
* Fully configurable using one XML configuration file.
* Image caching for fast loading of scaled images.

-----------------------------------------------------------------------------
2. Installation
-----------------------------------------------------------------------------

The tarball version can be build as follows:

	./configure
	make && make install

When you want to build the SVN version you will first need to create the 
configure script:
	
	libtoolize --copy
	aclocal
	autoconf
	automake --add-missing

Now you should be able to build appmanager as usual:

	./configure
	make && make install


-----------------------------------------------------------------------------
3. Running the application
-----------------------------------------------------------------------------

The program can be executed as follows from the source tarball after building it:

src/appmanager --conffile xml-config-files/mmclient.xml

This will start appmanager using the sample configuration file in "xml-config-files" and
a screen width of 800 and screen height of 600 pixels.

Use --help to get information on more supported options.


-----------------------------------------------------------------------------
4. XML Configuration file format
-----------------------------------------------------------------------------

The layout is defined in XML configuration files which are parsed by 
libparseconf see the README in libs/parseconf for more details.


-----------------------------------------------------------------------------
5. Making a release
-----------------------------------------------------------------------------

-- Making a new release version from trunk

1. Edit the Changelog and raise the version number in configure.ac

2. Commit the changes on the trunk

svn commit -m "New release version VERSION"

3. Make a branch to test and debug the release

svn copy https://gappman.googlecode.com/svn/trunk/ \
	https://gappman.googlecode.com/svn/branches/RELEASEVERSION

4. After testing and debugging commit the changes, if any. 

svn commit -m "New maintenance release version VERSION"

5. Make a release version

svn copy https://gappman.googlecode.com/svn/branches/RELEASEVERSION \
  https://gappman.googlecode.com/svn/tags/release-RELEASEVERSION


-- Making a maintenance release

To release a bugfix version after the initial release you can make a maintenance release.
Maintenance releases should be tested on the branch and result in a RELEASEVERSION.x
	 where x is a subnumber starting at 1 and increased with every new maintenance release

1. Edit the Changelog and raise the version number in configure.ac

2. Commit the changes on the branch

svn commit -m "New release version VERSION"

3. Make a maintenance release version
 
svn copy https://gappman.googlecode.com/svn/branches/RELEASEVERSION \
  https://gappman.googlecode.com/svn/tags/release-RELEASEVERSION.x



-- Create a downloadable version of the release

1. Go to the release version

cd tags/release-RELEASEVERSION.x

2. Create the makefiles

libtoolize --copy
aclocal
autoconf
automake --add-missing
/configure

1. Create the tarball as follows:

make dist

2. Copy the tarball to the website.





